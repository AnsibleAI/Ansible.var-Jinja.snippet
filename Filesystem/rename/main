---
## iterate over partitions, and keeep if label matches Gluster.UUID
# - name: Get Partitions who's label matches Gluster.UUID
#   debug:
#     msg: "Partition... {{fs_label_prefix + ansible_device_links.uuids[ item.key ] | join(',') }}"
#   loop: "{{ lookup('dict', ansible_device_links.labels) }}"
#   when:
#   - fs_label_prefix + ansible_device_links.uuids[ item.key ] | join(',') in item.value

- name: Get Partitions who's label matches Gluster.UUID - Only works after Reboot, because partition name doesn't update! i.e. `ansible_device_links.labels`
  set_fact:
    gluster_partition: "{{ gluster_partition + [item.key] }}"
  loop: "{{ lookup('dict', ansible_device_links.labels) }}"
  when: >
    fs_label_prefix + ansible_device_links.uuids[ item.key ] | join(',') in item.value


# Rename Filesystem
- name: update facts to get new partition uuid
  setup:

- name: Get UUID of newly created filesystem
  set_fact:
    fs_uuid: "{{ ansible_facts.devices[ item ].partitions[ item+'1' ].uuid }}"
  loop: "{{ empty_drive }}"

- name: rename filesystem to gluster.UUID - Breaks 'mount Storage device' because label doesn't update!
  become: true
  ansible.builtin.command: "btrfs filesystem label /dev/{{ item +'1'}} gluster.{{fs_uuid}}"
  loop: "{{ empty_drive }}"


- debug:
    msg: "Filesystem UUID: {{fs_uuid}}"
